---
// src/pages/success.astro
import Base from "../layouts/Base.astro";
import recalls from "../../data/recalls.json";

const total = recalls.length;
const brands = new Set(recalls.map(r => r.brandSlug));
const categories = new Set(recalls.map(r => r.categorySlug));
const states = new Set(recalls.flatMap(r => r.stateSlugs));

const title = `Revenue Success`;
const description = `Monetization readiness, inventory, and revenue calculator.`;
const canonical = `https://recallwatch.pages.dev/success`;
---

<Base title={title} description={description} canonical={canonical}>
    <meta name="robots" content="noindex" />
    <style>
      body { font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; margin: 2rem; line-height: 1.5; }
      .kpis { display: grid; grid-template-columns: repeat(4, minmax(0,1fr)); gap: 12px; margin: 1rem 0 2rem; }
      .card { border: 1px solid #e5e7eb; border-radius: 8px; padding: 12px; background: #fff; }
      .big { font-size: 1.8rem; font-weight: 700; }
      .label { color: #6b7280; font-size: 0.9rem; }
      .checks { display: grid; grid-template-columns: repeat(2, minmax(0,1fr)); gap: 12px; margin-top: 1rem; }
      .ok { color: #065f46; background: #ecfdf5; border: 1px solid #10b981; }
      .warn { color: #92400e; background: #fffbeb; border: 1px solid #fbbf24; }
      .err { color: #991b1b; background: #fef2f2; border: 1px solid #fca5a5; }
      .grid { display: grid; gap: 12px; }
      .calc { display: grid; grid-template-columns: repeat(3, minmax(0,1fr)); gap: 12px; }
      .calc .card { display: flex; flex-direction: column; gap: 8px; }
      .muted { color: #6b7280; font-size: 0.9rem; }
      input { width: 100%; padding: 6px 8px; border: 1px solid #d1d5db; border-radius: 6px; }
      code { background: #f3f4f6; padding: 2px 6px; border-radius: 4px; }
      @media (max-width: 900px){ .kpis{grid-template-columns: repeat(2,1fr)} .calc{grid-template-columns: 1fr} .checks{grid-template-columns: 1fr} }
    </style>
  </head>
  <body>
    <main class="grid">
      <header>
        <h1>{title}</h1>
        <p class="muted">A quick dashboard to validate monetization readiness and estimate revenue. Not public (noindex).</p>
        <p><a href="/">← Back to Home</a></p>
      </header>

      <section>
        <h2>Inventory</h2>
        <div class="kpis">
          <div class="card"><div class="big">{total.toLocaleString()}</div><div class="label">Recall pages</div></div>
          <div class="card"><div class="big">{brands.size.toLocaleString()}</div><div class="label">Brands</div></div>
          <div class="card"><div class="big">{categories.size.toLocaleString()}</div><div class="label">Categories</div></div>
          <div class="card"><div class="big">{states.size.toLocaleString()}</div><div class="label">State tags</div></div>
        </div>
      </section>

      <section>
        <h2>Readiness checklist</h2>
        <div id="checks" class="checks">
          <div class="card warn"><strong>robots.txt</strong><div class="muted">Checking…</div></div>
          <div class="card warn"><strong>sitemap</strong><div class="muted">Checking…</div></div>
          <div class="card warn"><strong>ads.txt</strong><div class="muted">Checking…</div></div>
          <div class="card warn"><strong>Analytics tag</strong><div class="muted">Looking for GA/GTM…</div></div>
        </div>
        <p class="muted">Tips: robots.txt and sitemap are generated by the project; ads.txt is a placeholder you should replace after AdSense approval. Analytics requires adding your tag.</p>
      </section>

      <section>
        <h2>Revenue calculator</h2>
        <div class="calc">
          <div class="card">
            <label>Daily sessions</label>
            <input id="sessions" type="number" value="200" min="0" step="50" />
            <label>Pages per session</label>
            <input id="pps" type="number" value="1.3" min="0" step="0.1" />
            <label>Ad RPM ($ per 1,000 pageviews)</label>
            <input id="rpm" type="number" value="8" min="0" step="0.5" />
          </div>
          <div class="card">
            <label>Affiliate clicks per day</label>
            <input id="affClicks" type="number" value="10" min="0" step="1" />
            <label>Affiliate EPC ($ per click)</label>
            <input id="epc" type="number" value="0.30" min="0" step="0.05" />
            <div class="muted">EPC = average commission per click.</div>
          </div>
          <div class="card">
            <div><strong>Ad revenue/day:</strong> $<span id="adRev">0</span></div>
            <div><strong>Affiliate revenue/day:</strong> $<span id="affRev">0</span></div>
            <div><strong>Total/day:</strong> $<span id="total">0</span></div>
            <hr />
            <div class="muted">Monthly (30d) estimate: $<span id="monthly">0</span></div>
          </div>
        </div>
        <p class="muted">Formula: Ads = (sessions × pages/session ÷ 1000) × RPM. Affiliates = clicks × EPC.</p>
      </section>

      <section>
        <h2>Next steps to turn everything green</h2>
        <ol>
          <li>Update <code>astro.config.mjs</code> site URL to your final domain. Rebuild to generate correct sitemap URLs.</li>
          <li>Replace <code>/ads.txt</code> with your AdSense (or other network) entries after approval.</li>
          <li>Add analytics: paste your GA4 or GTM snippet in a layout or page head.</li>
          <li>Add an ad slot component and affiliate link tracking to high-traffic pages.</li>
        </ol>
      </section>
    </main>

    <script>
      // Checklist runtime checks
      const checksEl = document.getElementById('checks');
      const updateRow = (idx, status, msg) => {
        const card = checksEl.children[idx];
        card.classList.remove('warn','err','ok');
        card.classList.add(status);
        card.querySelector('.muted').textContent = msg;
      };
      const safeHeadHas = (substr) => {
        return Array.from(document.scripts).some(s => (s.src||'').includes(substr)) || Array.from(document.querySelectorAll('script')).some(s => (s.textContent||'').includes(substr));
      };
      (async () => {
        // robots.txt
        try { const r = await fetch('/robots.txt'); updateRow(0, r.ok ? 'ok' : 'err', r.ok ? 'Found' : 'Missing'); } catch { updateRow(0, 'err', 'Error'); }
        // sitemap
        try {
          const a = await fetch('/sitemap-index.xml');
          if (a.ok) updateRow(1, 'ok', 'Found index');
          else {
            const b = await fetch('/sitemap.xml');
            updateRow(1, b.ok ? 'ok' : 'err', b.ok ? 'Found sitemap.xml' : 'Missing');
          }
        } catch { updateRow(1, 'err', 'Error'); }
        // ads.txt
        try { const r = await fetch('/ads.txt'); updateRow(2, r.ok ? 'ok' : 'err', r.ok ? 'Found (placeholder)' : 'Missing'); } catch { updateRow(2, 'err', 'Error'); }
        // analytics tag heuristics
        const hasGA = safeHeadHas('googletagmanager.com') || safeHeadHas('gtag/js') || !!window.dataLayer;
        updateRow(3, hasGA ? 'ok' : 'warn', hasGA ? 'Detected' : 'Not detected');
      })();

      // Revenue calculator
      const el = (id) => document.getElementById(id);
      const fmt = (n) => (Math.round(n * 100) / 100).toFixed(2);
      function recalc(){
        const sessions = parseFloat(el('sessions').value) || 0;
        const pps = parseFloat(el('pps').value) || 0;
        const rpm = parseFloat(el('rpm').value) || 0;
        const affClicks = parseFloat(el('affClicks').value) || 0;
        const epc = parseFloat(el('epc').value) || 0;
        const pageviews = sessions * pps;
        const adRev = (pageviews / 1000) * rpm;
        const affRev = affClicks * epc;
        const total = adRev + affRev;
        el('adRev').textContent = fmt(adRev);
        el('affRev').textContent = fmt(affRev);
        el('total').textContent = fmt(total);
        el('monthly').textContent = fmt(total * 30);
      }
      ['sessions','pps','rpm','affClicks','epc'].forEach(id => el(id).addEventListener('input', recalc));
      recalc();
    </script>
</Base>
